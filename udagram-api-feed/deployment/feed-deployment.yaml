apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-feed
  labels:
    app: backend-feed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-feed
  template:
    metadata:
      labels:
        app: backend-feed
    spec:
      serviceAccountName: my-s3-cluster-account
      containers:
      - name: backend-feed
        image: alterdeulo/udagram-api-feed
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: PORT
            value: '8080'
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: POSTGRES_HOST
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: POSTGRES_DB
          - name: AWS_REGION
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_REGION
          - name: AWS_PROFILE
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_PROFILE
          - name: AWS_BUCKET
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: AWS_BUCKET
          - name: URL
            valueFrom:
              configMapKeyRef:
                name: env-configmap
                key: URL
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: env-secret
                key: POSTGRES_USERNAME
                optional: false
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: env-secret
                key: POSTGRES_PASSWORD
                optional: false
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: env-secret
                key: JWT_SECRET
                optional: false
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret
      restartPolicy: Always